---

- name: install Nextcloud Python dependencies
  ansible.builtin.apt:
    pkg: "{{ nextcloud_dependencies_python }}"
    state: present
  tags:
    - role:nextcloud:install
    - role:nextcloud:upgrade

- name: install Nextcloud dependencies
  ansible.builtin.apt:
    pkg: "{{ nextcloud_dependencies }}"
    state: present
  tags:
    - role:nextcloud:install
    - role:nextcloud:upgrade

- ansible.builtin.include_tasks: php.yml
  tags:
    - role:nextcloud:php

- name: gather Nextcloud instance facts
  ansible.builtin.include_tasks: nextcloud/gather-facts.yml
  tags:
    - role:nextcloud:install
    - role:nextcloud:upgrade
    - role:nextcloud:configure
    - role:nextcloud:database
    - role:nextcloud:backup
    - role:nextcloud:apps

- name: download new Nextcloud version if required
  ansible.builtin.include_tasks: nextcloud/download.yml
  when: __nextcloud_do_install|bool or __nextcloud_do_upgrade|bool
  tags:
    - role:nextcloud:install
    - role:nextcloud:upgrade

- name: setup Nextcloud MySQL database
  ansible.builtin.include_tasks: nextcloud/mysql.yml
  tags:
    - role:nextcloud:install
    - role:nextcloud:upgrade
    - role:nextcloud:database

- name: install Nextcloud
  ansible.builtin.include_tasks: nextcloud/install.yml
  when: __nextcloud_do_install|bool and not __nextcloud_config.stat.exists
  tags:
    - role:nextcloud:install

- name: backup Nextcloud
  ansible.builtin.include_tasks: nextcloud/backup.yml
  when: nextcloud_backup|bool and __nextcloud_do_upgrade|bool
  tags:
    - role:nextcloud:upgrade
    - role:nextcloud:backup

- name: upgrade Nextcloud
  ansible.builtin.include_tasks: nextcloud/upgrade.yml
  when: __nextcloud_do_upgrade|bool
  tags:
    - role:nextcloud:upgrade

- name: configure Nextcloud
  ansible.builtin.include_tasks: nextcloud/configure.yml
  tags:
    - role:nextcloud:configure

- ansible.builtin.include_tasks: nextcloud/apps.yml
  vars:
    nextcloud_path: "{{ __nextcloud_do_install|ternary(nextcloud_dl_tmp_dir + '/nextcloud', nextcloud_instance) }}"
  tags:
    - role:nextcloud:install
    - role:nextcloud:apps
  when: not __nextcloud_do_upgrade

- name: finalize Nextcloud instance
  ansible.builtin.include_tasks: nextcloud/finalize.yml
  when: __nextcloud_do_install|bool or __nextcloud_do_upgrade|bool
  tags:
    - role:nextcloud:install
    - role:nextcloud:upgrade

- name: setup Nextcloud push notification daemon
  ansible.builtin.include_tasks: nextcloud/notify-push.yml
  when: nextcloud_notify_push
  tags:
    - role:nextcloud:install
    - role:nextcloud:upgrade
    - role:nextcloud:apps
    - role:nextcloud:notify-push

- name: create Nextcloud cronjob
  ansible.builtin.cron:
    name: "Nextcloud cronjob"
    minute: "*/5"
    user: "{{ nextcloud_http_user }}"
    job: "php -f {{ nextcloud_instance }}/cron.php"
    cron_file: nextcloud
  tags:
    - role:nextcloud:install
    - role:nextcloud:upgrade

- name: create Nextcloud logrotate rule
  ansible.builtin.template:
    src: nextcloud/nextcloud.logrotate.j2
    dest: /etc/logrotate.d/nextcloud
    mode: 0644
  when: __nextcloud_do_install|bool or __nextcloud_do_upgrade|bool
  tags:
    - role:nextcloud:install
    - role:nextcloud:upgrade

- ansible.builtin.include_tasks: apache-php.yml
  when: nextcloud_apache_php|d()
  tags:
    - role:nextcloud:apache

- name: copy nextcloud notify script
  ansible.builtin.template:
    src: nextcloud-notify-users.sh.j2
    dest: /usr/local/bin/nextcloud-notify-users.sh
    owner: root
    group: root
    mode: 0755
  tags:
    - role:nextcloud:scripts
